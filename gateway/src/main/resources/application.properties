
spring.application.name=gateway

server.port=8000

# zuul settings
zuul.retryable=true
zuul.prefix=/api

#to allow authentication headers to be passed to downsream microservices, remove Authorization
zuul.sensitive-headers=Cookie,Set-Cookie

# ribbon settings
client1.ribbon.MaxAutoRetries=3
client1.ribbon.MaxAutoRetriesNextServer=3
client1.ribbon.OkToRetryOnAllOperations=true

client2.ribbon.MaxAutoRetries=3
client2.ribbon.MaxAutoRetriesNextServer=3
client2.ribbon.OkToRetryOnAllOperations=true

ribbon.MaxAutoRetries=3
ribbon.MaxAutoRetriesNextServer=3
ribbon.OkToRetryOnAllOperations=true

# The total number of retries that are made will be equal to
# = sample-client.ribbon.MaxAutoRetries * sample-client.ribbon.MaxAutoRetriesNextServer.
# You can also control whether just GET requests will be retried or whether all requests will be retried by adjusting
# sample-client.ribbon.OkToRetryOnAllOperations

# Interval to refresh the server list from the source
#sample-client.ribbon.ServerListRefreshInterval=2000
# Connect timeout used by Apache HttpClient
#sample-client.ribbon.ConnectTimeout=3000
# Read timeout used by Apache HttpClient
#sample-client.ribbon.ReadTimeout=3000

#ribbon.ConnectTimeout=3000
#ribbon.ReadTimeout=3000

# eureka server
eureka.client.service-url.default-zone=http://127.0.0.1:8761/eureka
eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true

# configuration server
spring.cloud.config.uri=http://localhost:8761/config

# hystrix settings
hystrix.metrics.enabled=true
hystrix.metrics.polling-interval-ms=3000

turbine.app-config=client1,client2
turbine.aggregator.clusterConfig=CLIENT1,CLIENT2

#hystrix.command.default.execution.timeout.enabled=false
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
